{"version":3,"file":"static/js/923.a8f86305.chunk.js","mappings":"8HAEA,MAMA,EAN0BA,KACxBC,EAAAA,EAAAA,YAAU,KACRC,SAASF,MAAQA,CAAK,GACrB,CAACA,GAAO,C,0FCHb,MAqBA,EArBeG,IAMR,IANS,QACdC,EAAO,MACPC,EAAK,YACLC,EAAW,YACXC,EAAW,iBACXC,GACDL,EACC,OACEM,EAAAA,EAAAA,KAAA,OACEC,UAAW,CACT,kBACCN,GAAWI,EAAmB,wBAA0B,IACxDJ,GAAWG,EAAc,qBAAuB,IACjDI,KAAK,KACPC,QAASN,EAAYO,SAEpBR,IAASI,EAAAA,EAAAA,KAAA,OAAKC,UAAW,yBAAyBL,OAC/C,ECiBV,EAjCkBF,IAMX,IANY,QACjBC,EAAO,MACPU,EAAK,WACLC,EAAU,YACVT,EAAW,eACXU,GACDb,EACC,OACEM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOG,SACnBC,EAAMG,KAAI,CAACC,EAAKC,KACfV,EAAAA,EAAAA,KAAA,OAAAI,SACGK,EAAID,KAAI,CAACG,EAAQC,KAChBZ,EAAAA,EAAAA,KAACa,EAAM,CACLlB,QAASA,EAETC,MAAOe,EACPd,YACEF,EAAU,OAAW,IAAME,EAAYa,EAAUE,GAEnDd,YAAaQ,EAAWI,GAAUE,GAClCb,iBACEQ,GACAG,IAAaH,EAAeE,KAC5BG,IAAaL,EAAeO,KATzBF,MAJDF,MAmBR,E,wBCNV,QAvBA,SAAehB,GAA4B,IAA3B,OAAEqB,EAAM,aAAEC,GAActB,EACtC,OACEM,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAb,UACEc,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,cAAc,MAAMC,IAAK,GAAIC,GAAI,EAAElB,SAAA,EACxCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCG,UAChDJ,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACC,MAAM,QAAQC,QAAQ,KAAIrB,SACnCY,EAAaU,WAGlBR,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,cAAc,MAAKhB,SAAA,EACxBJ,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACE,QAAQ,KAAIrB,SAAC,YACzBJ,EAAAA,EAAAA,KAAA,QACEC,UAAW,yBAAyBc,8BAGxCf,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCG,UAChDJ,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACE,QAAQ,KAAIrB,SAAEY,EAAaW,cAKjD,E,uGC8DA,QAvEA,SAAgBjC,GAA2C,IAA1C,QAAEC,EAAO,QAAEiC,EAAO,KAAEC,EAAI,YAAEC,GAAapC,EAStD,OACEwB,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACN,QAAQ,WAAWO,GAAI,CAAEC,EAAG,GAAI7B,SAAA,EACrCc,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACe,UAAU,MAAMb,IAAK,EAAEjB,SAAA,EAC5BJ,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CACTC,KAAK,QACLjC,QAbKkC,KACXP,EAAYD,EAAO,EAAE,EAafS,SAAU3C,GAAWkC,IAASD,EAAQW,OAAS,EAAEnC,UAEjDJ,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACC,SAAS,aAErBzC,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACE,QAAQ,KAAIrB,SAAC,aACzBJ,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CACTC,KAAK,QACLjC,QAjBKuC,KACXZ,EAAYD,EAAO,EAAE,EAiBfS,SAAU3C,IAAqB,IAAVkC,GAAwB,IAATA,EAAWzB,UAE/CJ,EAAAA,EAAAA,KAAC2C,EAAAA,EAAQ,CAACF,SAAS,gBAGvBzC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CACHZ,GAAI,CACFa,SAAU,OACVC,UAAW,KACX1C,SAEDwB,EAAQpB,KAAI,CAACuC,EAAOC,KACnBhD,EAAAA,EAAAA,KAACiD,EAAAA,GAAQ,CAEPC,gBAAc,EACdC,gBACEH,IAAUnB,GACR7B,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACC,KAAK,QAAQE,UAAQ,EAAAlC,UAC/BJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAgB,CAACX,SAAS,aAG7BzC,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACC,KAAK,QAAQiB,eAAa,EAAAjD,UACpCJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAkB,CAACb,SAAS,YAGlCrC,UAEDc,EAAAA,EAAAA,MAACqC,EAAAA,EAAc,CACbjB,SAAU3C,EACVQ,QAASA,IAAM2B,EAAYkB,GAC3BQ,SAAUR,IAAUnB,EAAKzB,SAAA,EAEzBJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAY,CAAArD,UACXJ,EAAAA,EAAAA,KAAA,QACEC,UAAW,yBAAyB8C,EAAMW,OAAO3C,iCAGrDG,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAAaE,QAAQ,WAAUrB,SAAA,CACvC2C,EAAMW,OAAOjD,IAAI,KAAGsC,EAAMW,OAAO5C,MADnBkC,OAxBdA,SAiCjB,E,wBCrCA,QA1CA,SAAkBtD,GAA+C,IAA9C,QAAEiE,EAAO,WAAEC,EAAU,mBAAEC,GAAoBnE,EAC5D,OACEwB,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACN,QAAQ,WAAWO,GAAI,CAAE8B,MAAO,IAAK7B,EAAG,IAAK8B,GAAI,EAAGzC,GAAI,GAAIlB,SAAA,CACpD,OAAZuD,GAAsC,IAAlBA,EAAQK,QAC3BhE,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAAAnB,SAAC,qBAED,OAAZuD,GAAsC,IAAlBA,EAAQK,QAC3B9C,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CACTS,GAAI,CACFiC,QAAS,OACT7C,cAAe,MACf8C,WAAY,UACZ9D,SAAA,CACH,eAECJ,EAAAA,EAAAA,KAAA,QACEC,UAAW,sCACT0D,EAAQK,MAAQ,EAAI,QAAU,kBAEhC,OACGG,KAAKC,IAAIT,EAAQK,OAAO,iBAAeL,EAAQC,WAAW,YAGtD,OAAZD,IACCzC,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAb,SAAA,EACEc,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAAAnB,SAAA,CAAC,iBAAeuD,EAAQU,KAAO,IAAK,SAC/CrE,EAAAA,EAAAA,KAACsE,EAAAA,EAAO,CAACtC,GAAI,CAAE+B,GAAI,SAGvB/D,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACwC,GAAI,EAAE3D,SAAC,uBACnBJ,EAAAA,EAAAA,KAACuE,EAAAA,GAAM,CACLC,kBAAkB,MAClBC,IAnCU,EAoCVC,IAnCU,GAoCVC,MAAO,CAAC,CAAEC,MAAOhB,EAAYiB,MAAOjB,IACpCiB,MAAOjB,EACPkB,SAAWC,GAAMlB,EAAmBkB,EAAEC,OAAOH,WAIrD,EC7CMI,EAAuB,QACvBC,EAAgB,CACpB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,cAAe,cAAe,KAAM,KAAM,MAC7D,CAAC,KAAM,KAAM,KAAM,cAAe,cAAe,KAAM,KAAM,MAC7D,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEvCC,EAAsBC,EAC1BC,EAAeH,EAAeD,IAE1BK,EAAkBC,EAAYL,GAMpC,SAASM,EAAQC,EAAGC,GAClB,OAAOD,GAAK,GAAKA,EAAI,GAAKC,GAAK,GAAKA,EAAI,CAC1C,CAEA,SAASC,EAAwBtF,EAAOI,EAAKK,EAAKC,EAAQ6E,GACxD,MAAMC,EAAe,GAAG9E,UAClB+E,EAAiB,GAVzB,SAAqB/E,GACnB,MAAkB,UAAXA,EAAqB,QAAU,OACxC,CAQ4BgF,CAAYhF,WAChCiF,EAAS,GAkCf,MA/BmB,CACf,EAAE,GAAI,GAAI,EAAE,EAAG,GAAI,EAAE,EAAG,GACxB,CAAE,GAAI,GAAa,CAAE,EAAG,GACxB,CAAE,GAAI,GAAI,CAAE,EAAG,GAAI,CAAE,EAAG,IAGjBC,SAAS/D,IAClB,MAAOgE,EAAIC,GAAMjE,EACXkE,EAAgB,GACtB,IAAIX,EAAIhF,EAAMyF,EACVR,EAAI5E,EAAMqF,EAEd,GAAIX,EAAQC,EAAGC,IAAMrF,EAAMoF,GAAGC,KAAOI,EACnC,KAAON,EAAQC,EAAGC,IAAI,CACpB,MAAM/E,EAASN,EAAMoF,GAAGC,GACxB,GAAI/E,IAAWmF,EACbM,EAAcC,KAAK,CAACZ,EAAGC,QAClB,IAAe,OAAX/E,EACT,MACK,GAAIA,IAAWkF,EAAc,CAElC,GADAG,EAAOK,QAAQD,GACXR,EAAgB,MAAO,CAACI,GACvB,KACP,EAEAP,GAAKS,EACLR,GAAKS,CACP,CACF,IAGKH,CACT,CAEA,MAWMM,EAAcA,CAACjG,EAAOU,EAAQN,EAAKK,KACvC,MAAMyF,EAAWC,KAAKC,MAAMD,KAAKE,UAAUrG,IAG3C,MAfmBsG,EAACtG,EAAOU,EAAQN,EAAKK,KACxCT,EAAMI,GAAKK,GAAO,GAAGC,SAAc,EAYnC4F,CAAaJ,EAAUxF,EAAQN,EAAKK,GATV8F,EAACvG,EAAOU,EAAQN,EAAKK,KAChC6E,EAAwBtF,EAAOI,EAAKK,EAAKC,GACjDkF,SAAQvG,IAAiB,IAAfe,EAAKK,GAAIpB,EACxBW,EAAMI,GAAKK,GAAO,GAAGC,SAAc,GACnC,EAMF6F,CAAoBL,EAAUxF,EAAQN,EAAKK,GACpCyF,CAAQ,EAGjB,SAASlB,EAAehF,EAAOU,GAC7B,MAAM8F,EAAa,GAUnB,OARAxG,EAAM4F,SAAQ,CAACxF,EAAKqG,KAClBrG,EAAIwF,SAAQ,CAACtF,EAAQoG,KACnB,GAAe,OAAXpG,EAAiB,CACJgF,EAAwBtF,EAAOyG,EAAGC,EAAGhG,GAAQ,GACjDwB,OAAS,GAAGsE,EAAWR,KAAK,CAACS,EAAGC,GAC7C,IACA,IAEGF,CACT,CAWA,SAAStB,EAAYlF,GACnB,IAAI2G,EAAQ,CAAEtF,MAAO,EAAGC,MAAO,GAO/B,OANAtB,EAAM4F,SAASxF,IACbA,EAAIwF,SAAStF,IACI,gBAAXA,EAA0BqG,EAAMtF,QAChB,gBAAXf,GAA0BqG,EAAMrF,OAAO,GAChD,IAEGqF,CACT,CAEA,SAAS5B,EAAc6B,GACrB,MAAMC,EAAc,IAAIC,MAAM,IAAI3G,KAAKC,GACrC,IAAI0G,MAAM,IAAI3G,KAAK4G,IAAW,MAGhC,OADAH,EAAMhB,SAAQoB,IAAA,IAAE5G,EAAKK,GAAIuG,EAAA,OAAMH,EAAYzG,GAAKK,IAAO,CAAI,IACpDoG,CACT,C,gECjEA,QA9CA,SAAqBxH,GAQjB,IARkB,QACpB4H,EAAO,OACPC,EAAM,KACNC,EAAI,QACJ7H,EAAO,UACP8H,EAAS,UACTC,EAAS,cACTC,GACDjI,EACC,OACEwB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,cAAc,MAAMC,IAAK,EAAGW,GAAI,CAAE+B,GAAI,EAAGzC,GAAI,GAAIlB,SAAA,CACrDT,IAAWK,EAAAA,EAAAA,KAAC4H,EAAAA,EAAgB,CAACpG,MAAM,eACpCxB,EAAAA,EAAAA,KAAC6H,EAAAA,EAAM,CACL1H,QAASmH,EACT7F,QAAQ,WACRa,SAAU3C,GAAW8H,EAAUrH,SAChC,cAGDJ,EAAAA,EAAAA,KAAC6H,EAAAA,EAAM,CACL1H,QAASoH,EACT9F,QAAQ,WACRD,MAAM,YACNc,SACE3C,GAC6D,IAA7D0F,EAAeqC,EAAUrH,MAAOqH,EAAU3G,QAAQwB,OACnDnC,SACF,YAGAT,IACCK,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAACvI,MAAM,OAAMa,UACnBJ,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACX,MAAM,QAAQrB,QAASqH,EAAKpH,UACtCJ,EAAAA,EAAAA,KAAC+H,EAAAA,EAAQ,SAIf/H,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAACvI,MAAM,WAAUa,UACvBJ,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAAChC,QAASwH,EAAcvH,UACjCJ,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,UAKvB,E,cCsGA,QA1IA,WACE,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BxI,EAASyI,IAAcD,EAAAA,EAAAA,WAAS,IAChCT,EAAWW,IAAgBF,EAAAA,EAAAA,UAAS,CACzC9H,MAAO6E,EACPnE,OAAQkE,KAEH3E,EAAYgI,IAAiBH,EAAAA,EAAAA,UAAShD,IACtCnE,EAAcuH,IAAmBJ,EAAAA,EAAAA,UAAS7C,IAC1C1D,EAAS4G,IAAcL,EAAAA,EAAAA,UAAS,KAChCtG,EAAM4G,IAAWN,EAAAA,EAAAA,WAAU,IAC3BxE,EAAS+E,IAAcP,EAAAA,EAAAA,UAAS,OAChCvE,EAAY+E,IAAiBR,EAAAA,EAAAA,UAAS,IACtCS,EAAaC,IAAkBV,EAAAA,EAAAA,WAAS,IAC/CW,EAAAA,EAAAA,GAAiB,WAEjB,MAAMjJ,EAAcA,CAACY,EAAKK,EAAKiI,KAE7B,GADcC,SAAStB,EAAUrH,MAAMI,GAAKK,KAC/BR,EAAWG,GAAKK,GAAM,CACjC,MAEMmI,EAAe,CAAE5I,MAFNiG,EAAYoB,EAAUrH,MAAOqH,EAAU3G,OAAQN,EAAKK,GAE7BC,OADA,UAArB2G,EAAU3G,OAAqB,QAAU,SAEvDgI,GAAML,EAAW,MACtBQ,EAAcD,EAAcvB,EAAU3G,OAAQN,EAAKK,GACnDuH,EAAaY,EACf,GA4BIC,EAAgBA,CAACxB,EAAW3G,EAAQN,EAAKK,KAC7C,MACMqI,EAAS,CAAEzB,YAAWhE,OADb,CAAE3C,SAAQN,MAAKK,QAEb0H,GAAH,IAAV3G,EAAwB,CAACsH,GACb,CAACA,KAAWvH,EAAQwH,MAAMvH,KAC1C4G,EAAQ,EAAE,EA+BZ,OAZAjJ,EAAAA,EAAAA,YAAU,KACR,MAAM6J,EAAW,IAAIC,OAAO,IAAIC,IAAI,mBAEpC,OADArB,EAAUmB,GACH,IAAMA,EAASG,WAAW,GAChC,KAEHhK,EAAAA,EAAAA,YAAU,KACR,MAAMqH,EAAaxB,EAAeqC,EAAUrH,MAAOqH,EAAU3G,QAC7DuH,EAAclD,EAAcyB,IAC5B0B,EAAgBhD,EAAYmC,EAAUrH,OAAO,GAC5C,CAACqH,KAGFxG,EAAAA,EAAAA,MAACuI,EAAAA,EAAG,CAACxH,EAAG,EAAGgC,QAAQ,OAAOC,WAAW,SAAS9C,cAAc,SAAQhB,SAAA,EAClEJ,EAAAA,EAAAA,KAAC0J,EAAM,CAAC3I,OAAQ2G,EAAU3G,OAAQC,aAAcA,KAChDE,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,SAAS,KAAK9F,GAAI,EAAE3D,SAAA,EAClCc,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ/F,QAAQ,OACR7C,cAAc,SACd8C,WAAW,SAAQ9D,SAAA,EAEnBJ,EAAAA,EAAAA,KAACiK,EAAS,CACRtK,QAASA,EACTU,MAAOqH,EAAUrH,MACjBC,WAAYA,EACZT,YAAaA,EACbU,gBAA0B,IAAVsB,GAAeD,EAAQC,GAAM6B,UAE/C1D,EAAAA,EAAAA,KAACkK,EAAY,CACX5C,QAjFMA,KACde,EAAa,CACXhI,MAAO6E,EACPnE,OAAQkE,IAEVuD,EAAW,IACXC,GAAS,EAAE,EA4EHlB,OAzEKA,KACb,MAAM4C,EAAQ,IAAIC,KACdnC,IACFA,EAAOoC,YAAY,CAAC3C,EAAUrH,MAAOqH,EAAU3G,OAAQ6C,IACvDwE,GAAW,GAEXH,EAAOqC,UAAavF,IAClB,MAAOwF,EAAMvG,GAASe,EAAEyF,KAClBnG,EAAO,IAAI+F,KAASD,EAC1BzB,EAAW,CAAE1E,QAAOJ,aAAYS,SAChC+D,GAAW,GACXvI,EAAY0K,EAAK,GAAIA,EAAK,IAAI,EAAK,EAEvC,EA6DQ5K,QAASA,EACT6H,KA1CGA,KACXS,EAAOuB,YACP,MAAMH,EAAW,IAAIC,OAAO,IAAIC,IAAI,mBACpCrB,EAAUmB,GACVjB,GAAW,EAAM,EAuCTT,cAAeA,IAAMkB,GAAgB4B,IAAUA,IAC/ChD,UAA8B,IAAnB7F,EAAQW,OACnBmF,UAAWA,IAEZkB,IACC5I,EAAAA,EAAAA,KAAC0K,EAAY,CACX/G,QAASA,EACTC,WAAYA,EACZC,mBAvDgBgB,IAC1B8D,EAAc9D,EAAM,QA0DhB7E,EAAAA,EAAAA,KAAC2J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE5J,UACvBJ,EAAAA,EAAAA,KAAC2K,EAAO,CACNhL,QAASA,EACTiC,QAASA,EACTC,KAAMA,EACNC,YArEWkB,IACnByF,EAAQzF,GACRqF,EAAazG,EAAQoB,GAAO0E,UAAU,WAyE1C,C","sources":["hooks/useDocumentTitle.js","pages/Reversi/Square.jsx","pages/Reversi/GameBoard.jsx","pages/Reversi/Header.jsx","pages/Reversi/History.jsx","pages/Reversi/AdvancePanel.jsx","pages/Reversi/rule.js","pages/Reversi/ControlPanel.jsx","pages/Reversi/Reversi.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useDocumentTitle = (title) => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n};\r\n\r\nexport default useDocumentTitle;\r\n","import React from \"react\";\r\n\r\nconst Square = ({\r\n  loading,\r\n  piece,\r\n  handleClick,\r\n  isValidMove,\r\n  isPreviousAction,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={[\r\n        \"reversi-square\",\r\n        !loading && isPreviousAction ? \"reversi-previous-move\" : \"\",\r\n        !loading && isValidMove ? \"reversi-valid-move\" : \"\",\r\n      ].join(\" \")}\r\n      onClick={handleClick}\r\n    >\r\n      {piece && <div className={`reversi-piece reversi-${piece}`} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst GameBoard = ({\r\n  loading,\r\n  board,\r\n  validBoard,\r\n  handleClick,\r\n  previousAction,\r\n}) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {board.map((row, rowIndex) => (\r\n        <div key={rowIndex}>\r\n          {row.map((square, colIndex) => (\r\n            <Square\r\n              loading={loading}\r\n              key={colIndex}\r\n              piece={square}\r\n              handleClick={\r\n                loading ? () => {} : () => handleClick(rowIndex, colIndex)\r\n              }\r\n              isValidMove={validBoard[rowIndex][colIndex]}\r\n              isPreviousAction={\r\n                previousAction &&\r\n                rowIndex === previousAction.row &&\r\n                colIndex === previousAction.col\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n","import { Typography } from \"@mui/material\";\r\nimport { Stack } from \"@mui/system\";\r\n\r\nfunction Header({ player, piecesNumber }) {\r\n  return (\r\n    <>\r\n      <Stack flexDirection=\"row\" gap={10} mb={1}>\r\n        <div className=\"reversi-piece reversi-black-piece\">\r\n          <Typography color=\"white\" variant=\"h6\">\r\n            {piecesNumber.black}\r\n          </Typography>\r\n        </div>\r\n        <Stack flexDirection=\"row\">\r\n          <Typography variant=\"h5\">Turns:</Typography>\r\n          <span\r\n            className={`reversi-piece reversi-${player}-piece reversi-small`}\r\n          />\r\n        </Stack>\r\n        <div className=\"reversi-piece reversi-white-piece\">\r\n          <Typography variant=\"h6\">{piecesNumber.white}</Typography>\r\n        </div>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  Paper,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport KeyboardReturnIcon from \"@mui/icons-material/KeyboardReturn\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\nimport { Stack } from \"@mui/system\";\r\n\r\nfunction History({ loading, history, view, viewHistory }) {\r\n  const undo = () => {\r\n    viewHistory(view + 1);\r\n  };\r\n\r\n  const redo = () => {\r\n    viewHistory(view - 1);\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n      <Stack direction=\"row\" gap={2}>\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={undo}\r\n          disabled={loading || view === history.length - 1}\r\n        >\r\n          <UndoIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <Typography variant=\"h6\">History</Typography>\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={redo}\r\n          disabled={loading || view === -1 || view === 0}\r\n        >\r\n          <RedoIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Stack>\r\n      <List\r\n        sx={{\r\n          overflow: \"auto\",\r\n          maxHeight: 300,\r\n        }}\r\n      >\r\n        {history.map((state, index) => (\r\n          <ListItem\r\n            key={index}\r\n            disablePadding\r\n            secondaryAction={\r\n              index === view ? (\r\n                <IconButton size=\"small\" disabled>\r\n                  <RemoveRedEyeIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton size=\"small\" disableRipple>\r\n                  <KeyboardReturnIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              )\r\n            }\r\n          >\r\n            <ListItemButton\r\n              disabled={loading}\r\n              onClick={() => viewHistory(index)}\r\n              selected={index === view}\r\n            >\r\n              <ListItemIcon>\r\n                <span\r\n                  className={`reversi-piece reversi-${state.action.player}-piece reversi-tiny`}\r\n                />\r\n              </ListItemIcon>\r\n              <Typography key={index} variant=\"subtitle\">\r\n                {state.action.row}, {state.action.col}\r\n              </Typography>\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import { Divider, Paper, Slider, Typography } from \"@mui/material\";\r\n\r\nconst minDeepth = 1;\r\nconst maxDeepth = 15;\r\n\r\nfunction InfoPanel({ predict, treeDeepth, handleDeepthChange }) {\r\n  return (\r\n    <Paper variant=\"outlined\" sx={{ width: 350, p: 1.5, mt: 1, mb: 1 }}>\r\n      {predict !== null && predict.score === 0 && (\r\n        <Typography>Prediciton: Draw</Typography>\r\n      )}\r\n      {predict !== null && predict.score !== 0 && (\r\n        <Typography\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Prediciton:\r\n          <span\r\n            className={`reversi-tiny reversi-piece reversi-${\r\n              predict.score > 0 ? \"black\" : \"white\"\r\n            }-piece`}\r\n          />\r\n          win {Math.abs(predict.score)} pieces after {predict.treeDeepth} moves\r\n        </Typography>\r\n      )}\r\n      {predict !== null && (\r\n        <>\r\n          <Typography>Running time: {predict.time / 1000} s</Typography>\r\n          <Divider sx={{ mt: 1 }} />\r\n        </>\r\n      )}\r\n      <Typography mt={1}>AI Predict Moves:</Typography>\r\n      <Slider\r\n        valueLabelDisplay=\"off\"\r\n        min={minDeepth}\r\n        max={maxDeepth}\r\n        marks={[{ label: treeDeepth, value: treeDeepth }]}\r\n        value={treeDeepth}\r\n        onChange={(e) => handleDeepthChange(e.target.value)}\r\n      ></Slider>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default InfoPanel;\r\n","const DEFAULT_START_PLAYER = \"black\";\r\nconst DEFAULT_BOARD = [\r\n  [null, null, null, null, null, null, null, null],\r\n  [null, null, null, null, null, null, null, null],\r\n  [null, null, null, null, null, null, null, null],\r\n  [null, null, null, \"white-piece\", \"black-piece\", null, null, null],\r\n  [null, null, null, \"black-piece\", \"white-piece\", null, null, null],\r\n  [null, null, null, null, null, null, null, null],\r\n  [null, null, null, null, null, null, null, null],\r\n  [null, null, null, null, null, null, null, null],\r\n];\r\nconst DEFAULT_VALID_BOARD = getValidBoard(\r\n  findValidMoves(DEFAULT_BOARD, DEFAULT_START_PLAYER)\r\n);\r\nconst DEFAULT_PIEACES = countPieces(DEFAULT_BOARD);\r\n\r\nfunction getOpponent(player) {\r\n  return player === \"black\" ? \"white\" : \"black\";\r\n}\r\n\r\nfunction inBound(x, y) {\r\n  return x >= 0 && x < 8 && y >= 0 && y < 8;\r\n}\r\n\r\nfunction findFlankOpponentPieces(board, row, col, player, checkValidMove) {\r\n  const playerPieace = `${player}-piece`;\r\n  const opponentPieace = `${getOpponent(player)}-piece`;\r\n  const flanks = [];\r\n\r\n  // prettier-ignore\r\n  const directions = [\r\n      [-1, -1], [-1, 0], [-1, 1],\r\n      [ 0, -1],          [ 0, 1],\r\n      [ 1, -1], [ 1, 0], [ 1, 1],\r\n    ];\r\n\r\n  directions.forEach((direction) => {\r\n    const [dx, dy] = direction;\r\n    const squaresToFlip = [];\r\n    let x = row + dx;\r\n    let y = col + dy;\r\n\r\n    if (inBound(x, y) && board[x][y] === opponentPieace) {\r\n      while (inBound(x, y)) {\r\n        const square = board[x][y];\r\n        if (square === opponentPieace) {\r\n          squaresToFlip.push([x, y]);\r\n        } else if (square === null) {\r\n          break;\r\n        } else if (square === playerPieace) {\r\n          flanks.push(...squaresToFlip);\r\n          if (checkValidMove) return [flanks];\r\n          else break;\r\n        }\r\n\r\n        x += dx;\r\n        y += dy;\r\n      }\r\n    }\r\n  });\r\n\r\n  return flanks;\r\n}\r\n\r\nconst placePieaces = (board, player, row, col) => {\r\n  board[row][col] = `${player}-piece`;\r\n};\r\n\r\nconst flankOpponentPieces = (board, player, row, col) => {\r\n  const flanks = findFlankOpponentPieces(board, row, col, player);\r\n  flanks.forEach(([row, col]) => {\r\n    board[row][col] = `${player}-piece`;\r\n  });\r\n};\r\n\r\nconst updateBoard = (board, player, row, col) => {\r\n  const newBoard = JSON.parse(JSON.stringify(board));\r\n  placePieaces(newBoard, player, row, col);\r\n  flankOpponentPieces(newBoard, player, row, col);\r\n  return newBoard;\r\n};\r\n\r\nfunction findValidMoves(board, player) {\r\n  const validMoves = [];\r\n\r\n  board.forEach((row, i) => {\r\n    row.forEach((square, j) => {\r\n      if (square === null) {\r\n        const flanks = findFlankOpponentPieces(board, i, j, player, true);\r\n        if (flanks.length > 0) validMoves.push([i, j]);\r\n      }\r\n    });\r\n  });\r\n  return validMoves;\r\n}\r\n\r\nconst isGameOver = (board, validMoves) => {\r\n  const boardFull = board.every((row) =>\r\n    row.every((square) => square !== null)\r\n  );\r\n  const noValidMoves = validMoves.length === 0;\r\n  if (boardFull || noValidMoves) return true;\r\n  else return false;\r\n};\r\n\r\nfunction countPieces(board) {\r\n  let count = { black: 0, white: 0 };\r\n  board.forEach((row) => {\r\n    row.forEach((square) => {\r\n      if (square === \"black-piece\") count.black++;\r\n      else if (square === \"white-piece\") count.white++;\r\n    });\r\n  });\r\n  return count;\r\n}\r\n\r\nfunction getValidBoard(moves) {\r\n  const valid_board = [...Array(8)].map((row) =>\r\n    [...Array(8)].map((column) => false)\r\n  );\r\n  moves.forEach(([row, col]) => (valid_board[row][col] = true));\r\n  return valid_board;\r\n}\r\n\r\nexport {\r\n  DEFAULT_BOARD,\r\n  DEFAULT_START_PLAYER,\r\n  DEFAULT_VALID_BOARD,\r\n  DEFAULT_PIEACES,\r\n  updateBoard,\r\n  findValidMoves,\r\n  isGameOver,\r\n  getValidBoard,\r\n  countPieces,\r\n};\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Stack,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { findValidMoves } from \"./rule\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\n\r\nfunction ControlPanel({\r\n  newGame,\r\n  aiMove,\r\n  stop,\r\n  loading,\r\n  isNewGame,\r\n  gameState,\r\n  toggleAdvance,\r\n}) {\r\n  return (\r\n    <Stack flexDirection=\"row\" gap={2} sx={{ mt: 2, mb: 1 }}>\r\n      {loading && <CircularProgress color=\"secondary\" />}\r\n      <Button\r\n        onClick={newGame}\r\n        variant=\"outlined\"\r\n        disabled={loading || isNewGame}\r\n      >\r\n        New Game\r\n      </Button>\r\n      <Button\r\n        onClick={aiMove}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        disabled={\r\n          loading ||\r\n          findValidMoves(gameState.board, gameState.player).length === 0\r\n        }\r\n      >\r\n        AI play\r\n      </Button>\r\n      {loading && (\r\n        <Tooltip title=\"Stop\">\r\n          <IconButton color=\"error\" onClick={stop}>\r\n            <StopIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <Tooltip title=\"Settings\">\r\n        <IconButton onClick={toggleAdvance}>\r\n          <SettingsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { Box, Grid } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GameBoard from \"./GameBoard\";\r\nimport Header from \"./Header\";\r\nimport History from \"./History\";\r\nimport AdvancePanel from \"./AdvancePanel\";\r\nimport {\r\n  countPieces,\r\n  DEFAULT_BOARD,\r\n  DEFAULT_START_PLAYER,\r\n  DEFAULT_VALID_BOARD,\r\n  DEFAULT_PIEACES,\r\n  findValidMoves,\r\n  updateBoard,\r\n  getValidBoard,\r\n} from \"./rule\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport useDocumentTitle from \"../../hooks/useDocumentTitle\";\r\n\r\nfunction Reversi() {\r\n  const [worker, setWorker] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [gameState, setGameState] = useState({\r\n    board: DEFAULT_BOARD,\r\n    player: DEFAULT_START_PLAYER,\r\n  });\r\n  const [validBoard, setValidBoard] = useState(DEFAULT_VALID_BOARD);\r\n  const [piecesNumber, setPiecesNumber] = useState(DEFAULT_PIEACES);\r\n  const [history, setHistory] = useState([]);\r\n  const [view, setView] = useState(-1);\r\n  const [predict, setPredict] = useState(null);\r\n  const [treeDeepth, setTreeDeepth] = useState(8);\r\n  const [openAdvance, setOpenAdvance] = useState(false);\r\n  useDocumentTitle(\"Reversi\");\r\n\r\n  const handleClick = (row, col, isAI) => {\r\n    const empty = Boolean(!gameState.board[row][col]);\r\n    if (empty && validBoard[row][col]) {\r\n      const newBoard = updateBoard(gameState.board, gameState.player, row, col);\r\n      const nextPlayer = gameState.player === \"black\" ? \"white\" : \"black\";\r\n      const newGameState = { board: newBoard, player: nextPlayer };\r\n      if (!isAI) setPredict(null);\r\n      updateHistory(newGameState, gameState.player, row, col);\r\n      setGameState(newGameState);\r\n    }\r\n  };\r\n\r\n  const newGame = () => {\r\n    setGameState({\r\n      board: DEFAULT_BOARD,\r\n      player: DEFAULT_START_PLAYER,\r\n    });\r\n    setHistory([]);\r\n    setView(-1);\r\n  };\r\n\r\n  const aiMove = () => {\r\n    const start = new Date();\r\n    if (worker) {\r\n      worker.postMessage([gameState.board, gameState.player, treeDeepth]);\r\n      setLoading(true);\r\n\r\n      worker.onmessage = (e) => {\r\n        const [move, score] = e.data;\r\n        const time = new Date() - start;\r\n        setPredict({ score, treeDeepth, time });\r\n        setLoading(false);\r\n        handleClick(move[0], move[1], true);\r\n      };\r\n    }\r\n  };\r\n\r\n  const updateHistory = (gameState, player, row, col) => {\r\n    const action = { player, row, col };\r\n    const record = { gameState, action };\r\n    if (view === -1) setHistory([record]);\r\n    else setHistory([record, ...history.slice(view)]);\r\n    setView(0);\r\n  };\r\n\r\n  const viewHistory = (index) => {\r\n    setView(index);\r\n    setGameState(history[index].gameState);\r\n  };\r\n\r\n  const handleDeepthChange = (value) => {\r\n    setTreeDeepth(value);\r\n  };\r\n\r\n  const stop = () => {\r\n    worker.terminate();\r\n    const aiWorker = new Worker(new URL(\"ai.js\", import.meta.url));\r\n    setWorker(aiWorker);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const aiWorker = new Worker(new URL(\"ai.js\", import.meta.url));\r\n    setWorker(aiWorker);\r\n    return () => aiWorker.terminate();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const validMoves = findValidMoves(gameState.board, gameState.player);\r\n    setValidBoard(getValidBoard(validMoves));\r\n    setPiecesNumber(countPieces(gameState.board));\r\n  }, [gameState]);\r\n\r\n  return (\r\n    <Box p={2} display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\r\n      <Header player={gameState.player} piecesNumber={piecesNumber} />\r\n      <Grid container maxWidth=\"sm\" mt={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={8}\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          <GameBoard\r\n            loading={loading}\r\n            board={gameState.board}\r\n            validBoard={validBoard}\r\n            handleClick={handleClick}\r\n            previousAction={view !== -1 && history[view].action}\r\n          />\r\n          <ControlPanel\r\n            newGame={newGame}\r\n            aiMove={aiMove}\r\n            loading={loading}\r\n            stop={stop}\r\n            toggleAdvance={() => setOpenAdvance((prev) => !prev)}\r\n            isNewGame={history.length === 0}\r\n            gameState={gameState}\r\n          />\r\n          {openAdvance && (\r\n            <AdvancePanel\r\n              predict={predict}\r\n              treeDeepth={treeDeepth}\r\n              handleDeepthChange={handleDeepthChange}\r\n            />\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <History\r\n            loading={loading}\r\n            history={history}\r\n            view={view}\r\n            viewHistory={viewHistory}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Reversi;\r\n"],"names":["title","useEffect","document","_ref","loading","piece","handleClick","isValidMove","isPreviousAction","_jsx","className","join","onClick","children","board","validBoard","previousAction","map","row","rowIndex","square","colIndex","Square","col","player","piecesNumber","_Fragment","_jsxs","Stack","flexDirection","gap","mb","Typography","color","variant","black","white","history","view","viewHistory","Paper","sx","p","direction","IconButton","size","undo","disabled","length","UndoIcon","fontSize","redo","RedoIcon","List","overflow","maxHeight","state","index","ListItem","disablePadding","secondaryAction","RemoveRedEyeIcon","disableRipple","KeyboardReturnIcon","ListItemButton","selected","ListItemIcon","action","predict","treeDeepth","handleDeepthChange","width","mt","score","display","alignItems","Math","abs","time","Divider","Slider","valueLabelDisplay","min","max","marks","label","value","onChange","e","target","DEFAULT_START_PLAYER","DEFAULT_BOARD","DEFAULT_VALID_BOARD","getValidBoard","findValidMoves","DEFAULT_PIEACES","countPieces","inBound","x","y","findFlankOpponentPieces","checkValidMove","playerPieace","opponentPieace","getOpponent","flanks","forEach","dx","dy","squaresToFlip","push","updateBoard","newBoard","JSON","parse","stringify","placePieaces","flankOpponentPieces","validMoves","i","j","count","moves","valid_board","Array","column","_ref2","newGame","aiMove","stop","isNewGame","gameState","toggleAdvance","CircularProgress","Button","Tooltip","StopIcon","SettingsIcon","worker","setWorker","useState","setLoading","setGameState","setValidBoard","setPiecesNumber","setHistory","setView","setPredict","setTreeDeepth","openAdvance","setOpenAdvance","useDocumentTitle","isAI","Boolean","newGameState","updateHistory","record","slice","aiWorker","Worker","URL","terminate","Box","Header","Grid","container","maxWidth","item","xs","md","GameBoard","ControlPanel","start","Date","postMessage","onmessage","move","data","prev","AdvancePanel","History"],"sourceRoot":""}